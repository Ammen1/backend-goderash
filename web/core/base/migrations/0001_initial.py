# Generated by Django 4.2.8 on 2023-12-15 22:04

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('password', models.CharField(max_length=255)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=100)),
                ('is_active', models.BooleanField(default=False)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='base.category')),
            ],
            options={
                'verbose_name_plural': 'services',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='RouteManagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_location', models.CharField(max_length=100)),
                ('end_location', models.CharField(max_length=100)),
                ('distance', models.DecimalField(decimal_places=2, max_digits=8)),
                ('estimated_time', models.TimeField()),
            ],
        ),
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('total_cost', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='total price')),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_types', to='base.brand')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='service_types', to='base.category')),
            ],
        ),
        migrations.CreateModel(
            name='VehicleInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_type', models.CharField(max_length=100)),
                ('vehicle_model', models.CharField(max_length=100)),
                ('license_plate', models.CharField(max_length=100)),
                ('driver_license', models.CharField(max_length=100)),
                ('service_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='vehicles', to='base.servicetype')),
            ],
        ),
        migrations.CreateModel(
            name='Tyre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tyre_size', models.CharField(max_length=100)),
                ('tyre_type', models.CharField(max_length=100)),
                ('regular_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Regular price')),
                ('qty', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('car_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.vehicleinformation')),
                ('service_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tyes', to='base.servicetype')),
            ],
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GasLineDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fuel_capacity', models.DecimalField(decimal_places=2, help_text='Fuel capacity in liters', max_digits=8, validators=[django.core.validators.MinValueValidator(0)])),
                ('current_fuel_level', models.DecimalField(decimal_places=2, help_text='Current fuel level in liters', max_digits=8, validators=[django.core.validators.MinValueValidator(0)])),
                ('regular_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Regular price')),
                ('qty', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('car_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.vehicleinformation')),
                ('service_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='gaslines', to='base.servicetype')),
            ],
        ),
        migrations.CreateModel(
            name='EngineOil',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('engine_oil_type', models.CharField(max_length=100)),
                ('engine_size', models.CharField(max_length=100)),
                ('regular_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Regular price')),
                ('qty', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='engine_oils', to='base.brand')),
                ('car_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.vehicleinformation')),
                ('service_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='engine_oils', to='base.servicetype')),
            ],
        ),
        migrations.CreateModel(
            name='EmergencyButtonAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('location', models.CharField(max_length=255)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Complaint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(max_length=255)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CarWash',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wash_type', models.CharField(max_length=255)),
                ('exterior', models.BooleanField()),
                ('interior', models.BooleanField()),
                ('water', models.BooleanField()),
                ('regular_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Regular price')),
                ('qty', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('car_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.vehicleinformation')),
                ('service_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='carwashes', to='base.servicetype')),
            ],
        ),
        migrations.CreateModel(
            name='Battery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('select_battery_service', models.CharField(choices=[('standard', 'Standard'), ('premium', 'Premium'), ('agm', 'AGM')], max_length=100)),
                ('regular_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Regular price')),
                ('qty', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batteries', to='base.brand')),
                ('car_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.vehicleinformation')),
                ('service_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='batteries', to='base.servicetype')),
            ],
        ),
    ]
